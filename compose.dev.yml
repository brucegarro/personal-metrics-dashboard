# This can be run like this:
#   docker compose -f compose.dev.yml up --build

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: fastapi
        ports:
            - "8000:8000" # uvicorn
            - "5678:5678" # debugpy
        environment:
            - PYTHONDONTWRITEBYTECODE=1
            - PYTHONUNBUFFERED=1
            - PIP_NO_CACHE_DIR=1
            # Oura OAuth config
            - OURA_CLIENT_ID=${OURA_CLIENT_ID}
            - OURA_CLIENT_SECRET=${OURA_CLIENT_SECRET}
            - OURA_REDIRECT_URI=https://${NGROK_DOMAIN}/oura_callback
        env_file: .env.local
        volumes:
            - .:/app
        command: [
            "python", "-m", "debugpy",
            "--listen", "0.0.0.0:5678",
            # "--wait-for-client",
            # "--configure-subProcess", "True",
            "-m", "uvicorn", "main:app",
            "--host", "0.0.0.0", "--port", "8000", "--reload"
        ]
    ngrok:
        image: ngrok/ngrok:latest
        container_name: ngrok
        depends_on:
        - app
        environment:
        - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
        command:
        - "http"
        - "--domain=${NGROK_DOMAIN}"
        - "app:8000"
        ports:
        - "4040:4040" 
    redis:
        image: "redis:alpine"
        container_name: redis
        depends_on:
        - app
        ports:
        - "6379:6379"
    minio:
      image: minio/minio:latest
      command: server /data --console-address ":9001"
      environment:
        MINIO_ROOT_USER: devminio
        MINIO_ROOT_PASSWORD: devminio12345
      ports:
        - "9000:9000"   # S3 API
        - "9001:9001"   # Web console
      volumes:
        - ./minio-data:/data
    minio-setup:
      image: minio/mc:latest
      depends_on: [minio]
      entrypoint: >
        /bin/sh -c "
        mc alias set local http://minio:9000 devminio devminio12345 &&
        mc mb -p local/analytics || true &&
        mc version enable local/analytics || true
        "